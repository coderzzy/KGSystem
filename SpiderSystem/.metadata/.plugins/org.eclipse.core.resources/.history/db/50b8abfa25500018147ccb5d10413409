package org.SpiderSystem.Web.controller;

import java.io.IOException;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.SpiderSystem.Web.pojo.News;
import org.SpiderSystem.Web.service.IJsonService;
import org.SpiderSystem.Web.service.INewsService;
import org.SpiderSystem.Web.util.AjaxProcessor;
import org.SpiderSystem.Web.util.JDomOutput;
import org.jdom.JDOMException;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;

@Controller
@RequestMapping(value="/newsDataProcess")
public class NewsDataProcessController {
	
	private static boolean preProcess_check;
	
	@Resource
	private INewsService newsService;
	
	@RequestMapping(value="/index")
	public String index(){
		
		return "data_news_process";
	}
	
	/**
	 * 数据清洗，并且写入xml表格
	 * @param request
	 * @param response
	 */
	@RequestMapping(value="/preProcess")
	public void preProcess(HttpServletRequest request,HttpServletResponse response){
		String jsonResult = AjaxProcessor.getJSONString(request,
				new IJsonService(){
					@Override
					public Map<String, Object> run() {
						// TODO Auto-generated method stub
						
						Map<String,Object> map = new HashMap<String,Object>();
						Thread thread = new Thread(){
							public void run(){
								preProcess_check = false;
								int id = 1;
								int size=6;
								for(int i=0;i<newsService.getNewsCount()/size;i++){
									List<News> list = newsService.getNewsPage(i+1, size);
									for (Iterator<News> it = list.iterator(); it.hasNext();) {
									     News news = it.next();
									     // System.out.println("1:"+news.getTitle());
									     // System.out.println("2:"+news.getContent());
									     // System.out.println("3:"+news.getTime());
									     // System.out.println("4:"+news.getUrl());
									     if(news.getContent() == null || 
									    		 news.getTime() == null || 
									    		 news.getTitle() == null || 
									    		 news.getUrl() == null){
									    	 continue;
									    }
									     try {
									    	 JDomOutput.execute(id++, news, "data_process/news_data.xml", "UTF-8");
									    	 } catch (IOException e) {
												// TODO Auto-generated catch block
												e.printStackTrace();
											} catch (JDOMException e) {
												// TODO Auto-generated catch block
												e.printStackTrace();
											} 
									}	
								}
								preProcess_check = true;
							}
						};
						thread.start();
						map.put("result", "success");
						
						return map;
					}
		});
	    AjaxProcessor.renderData(response, jsonResult);
	}
	
	@RequestMapping(value="/preProcess_check")
	public void preProcess_check(HttpServletRequest request,HttpServletResponse response){
		String jsonResult = AjaxProcessor.getJSONString(request,
				new IJsonService(){
					@Override
					public Map<String, Object> run() {
						// TODO Auto-generated method stub
						
						Map<String,Object> map = new HashMap<String,Object>();
						if(preProcess_check){
							map.put("result", "success");
						}else{
							map.put("result", "error");
						}
						return map;
					}
		});
	    AjaxProcessor.renderData(response, jsonResult);
	}
}
