/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M11
 * Generated at: 2018-05-03 04:51:17 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class data_005fnews_005fanalysis_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html class=\"no-js fixed-layout\">\n");
      out.write("<head>\n");
      out.write("  <meta charset=\"UTF-8\">\n");
      out.write("\t<title>Admin Index Page | SpiderSystem</title>\n");
      out.write("\t<!-- 以下代码告诉IE浏览器，IE8/9及以后的版本都会以最高版本IE来渲染页面 -->\n");
      out.write("\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n");
      out.write("\n");
      out.write("  <meta name=\"description\" content=\"the admin_index of SpiderSystem\">\n");
      out.write("  <meta name=\"keywords\" content=\"index SpiderSystem\">\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("\t<meta name=\"renderer\" content=\"webkit\">\n");
      out.write("\t<!-- 以下代码取消第三方转码 -->\n");
      out.write("\t<meta name=\"Cache-Control\" content=\"no-siteapp\">\n");
      out.write("\n");
      out.write("\t<link rel=\"icon\" type=\"image/png\"\n");
      out.write("\t\thref=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/amazeui_assets/i/favicon.png\">\n");
      out.write("  <link rel=\"apple-touch-icon-precomposed\"\n");
      out.write("    href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/amazeui_assets/i/app-icon72x72@2x.png\">\n");
      out.write("  <link rel=\"stylesheet\"\n");
      out.write("\t\thref=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/amazeui_assets/css/amazeui.min.css\">\n");
      out.write("  <link rel=\"stylesheet\"\n");
      out.write("  \thref=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/amazeui_assets/css/admin.css\">\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("  <!--[if lte IE 9]>\n");
      out.write("  <p class=\"browsehappy\">你正在使用<strong>过时</strong>的浏览器，Amaze UI 暂不支持。 请 <a href=\"http://browsehappy.com/\" target=\"_blank\">升级浏览器</a>\n");
      out.write("    以获得更好的体验！</p>\n");
      out.write("  <![endif]-->\n");
      out.write("\n");
      out.write("  ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "included_header.jsp", out, false);
      out.write("\n");
      out.write("\n");
      out.write("  <div class=\"am-cf admin-main\">\n");
      out.write("    <!-- sidebar start-->\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "included_sidebar.jsp", out, false);
      out.write("\n");
      out.write("    <!-- siderbar end -->\n");
      out.write("\n");
      out.write("    <!-- content start-->\n");
      out.write("    <div class=\"admin-content\">\n");
      out.write("      <div class=\"admin-content-body\">\n");
      out.write("\t\t<div id=\"data_blank\" style=\"width:600px; height: 400px;\"></div>\n");
      out.write("      </div>\n");
      out.write("\n");
      out.write("      <footer class=\"admin-content-footer\">\n");
      out.write("        <hr>\n");
      out.write("        <p class=\"am-padding-left\">@ 2018 All Rights Reserved Zzy.</p>\n");
      out.write("      </footer>\n");
      out.write("    </div>\n");
      out.write("    <!-- content end-->\n");
      out.write("\n");
      out.write("\n");
      out.write("  </div>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("  <!--[if lt IE 9]>\n");
      out.write("  <script src=\"http://libs.baidu.com/jquery/1.11.1/jquery.min.js\"></script>\n");
      out.write("  <script src=\"http://cdn.staticfile.org/modernizr/2.8.3/modernizr.js\"></script>\n");
      out.write("  <script src=\"assets/js/amazeui.ie8polyfill.min.js\"></script>\n");
      out.write("  <![endif]-->\n");
      out.write("\n");
      out.write("  <!--[if (gte IE 9)|!(IE)]><!-->\n");
      out.write("  <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/js/jquery.min.js\"></script>\n");
      out.write("  <!--<![endif]-->\n");
      out.write("  <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/amazeui_assets/js/amazeui.min.js\"></script>\n");
      out.write("  <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/amazeui_assets/js/app.js\"></script>\n");
      out.write("  <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/js/echarts.js\"></script>\n");
      out.write("  \n");
      out.write("  <script type=\"text/javascript\">\n");
      out.write("  \t\t/*\n");
      out.write("        //指定图标的配置和数据\n");
      out.write("        $(function(){\n");
      out.write("        \tvar option = {\n");
      out.write("                    title:{\n");
      out.write("                        text:'ECharts 数据统计'\n");
      out.write("                    },\n");
      out.write("                    tooltip:{},\n");
      out.write("                    legend:{\n");
      out.write("                        data:['用户来源']\n");
      out.write("                    },\n");
      out.write("                    xAxis:{\n");
      out.write("                        data:[\"Android\",\"IOS\",\"PC\",\"Ohter\"]\n");
      out.write("                    },\n");
      out.write("                    yAxis:{\n");
      out.write("\n");
      out.write("                    },\n");
      out.write("                    series:[{\n");
      out.write("                        name:'访问量',\n");
      out.write("                        type:'bar',\n");
      out.write("                        data:[500,200,360,100]\n");
      out.write("                    }]\n");
      out.write("                };\n");
      out.write("                //初始化echarts实例\n");
      out.write("                var data_blank_Chart = echarts.init(document.getElementById('data_blank'));\n");
      out.write("\n");
      out.write("                //使用制定的配置项和数据显示图表\n");
      out.write("                data_blank_Chart.setOption(option);\n");
      out.write("        });\n");
      out.write("  \t\t*/\n");
      out.write("  \t\t\n");
      out.write("  \t\t$(function(){\n");
      out.write("  \t\t\t$.ajax({\n");
      out.write("  \t             url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/newsDataAnalysis/show\",\n");
      out.write("  \t             type: \"POST\",\n");
      out.write("  \t             dataType: \"json\",\n");
      out.write("  \t             /*\n");
      out.write("  \t             data: {\n");
      out.write("  \t               \"newsId\": newsId\n");
      out.write("  \t             },\n");
      out.write("  \t             */\n");
      out.write("  \t             async: false,\n");
      out.write("  \t             success: function(data) {\n");
      out.write("  \t            \t if(data.result == \"success\"){\n");
      out.write("  \t                \t // alert(\"操作成功\");\n");
      out.write("  \t                \t blank_pie(data.news_count_blank,data.news_count - data.news_count_blank);\n");
      out.write("  \t                 }else{\n");
      out.write("  \t                \t alert(\"数据读取失败\");\n");
      out.write("  \t                 }\n");
      out.write("  \t             },\n");
      out.write("  \t             error: function() {\n");
      out.write("  \t               alert(\"访问服务器失败，...请检查网络连接，如确实怀疑服务器问题请联系Zzy\");\n");
      out.write("  \t             }\n");
      out.write("  \t           });\n");
      out.write("  \t\t});\n");
      out.write("  \t\t\n");
      out.write("  \t\tfunction blank_pie(blank_num,other_num){\n");
      out.write("  \t\t\tvar option = {\n");
      out.write("  \t\t\t\t    title : {\n");
      out.write("  \t\t\t\t        text: '空白数据比例图',\n");
      out.write("  \t\t\t\t        subtext: '--',\n");
      out.write("  \t\t\t\t        x:'center'\n");
      out.write("  \t\t\t\t    },\n");
      out.write("  \t\t\t\t    tooltip : {\n");
      out.write("  \t\t\t\t        trigger: 'item',\n");
      out.write("  \t\t\t\t        formatter: \"{a} <br/>{b} : {c} ({d}%)\"\n");
      out.write("  \t\t\t\t    },\n");
      out.write("  \t\t\t\t    legend: {\n");
      out.write("  \t\t\t\t        orient: 'vertical',\n");
      out.write("  \t\t\t\t        left: 'left',\n");
      out.write("  \t\t\t\t        data: ['空白数据','有效数据']\n");
      out.write("  \t\t\t\t    },\n");
      out.write("  \t\t\t\t    series : [\n");
      out.write("  \t\t\t\t        {\n");
      out.write("  \t\t\t\t            name: '访问来源',\n");
      out.write("  \t\t\t\t            type: 'pie',\n");
      out.write("  \t\t\t\t            radius : '55%',\n");
      out.write("  \t\t\t\t            center: ['50%', '60%'],\n");
      out.write("  \t\t\t\t            data:[\n");
      out.write("  \t\t\t\t                {value:blank_num, name:'空白数据'},\n");
      out.write("  \t\t\t\t                {value:other_num, name:'有效数据'}\n");
      out.write("  \t\t\t\t            ],\n");
      out.write("  \t\t\t\t            itemStyle: {\n");
      out.write("  \t\t\t\t                emphasis: {\n");
      out.write("  \t\t\t\t                    shadowBlur: 10,\n");
      out.write("  \t\t\t\t                    shadowOffsetX: 0,\n");
      out.write("  \t\t\t\t                    shadowColor: 'rgba(0, 0, 0, 0.5)'\n");
      out.write("  \t\t\t\t                }\n");
      out.write("  \t\t\t\t            }\n");
      out.write("  \t\t\t\t        }\n");
      out.write("  \t\t\t\t    ]\n");
      out.write("  \t\t\t\t};\n");
      out.write("  \t\t\t\n");
      out.write("  \t\t\t//初始化echarts实例\n");
      out.write("            var data_blank_Chart = echarts.init(document.getElementById('data_blank'));\n");
      out.write("\n");
      out.write("            //使用制定的配置项和数据显示图表\n");
      out.write("            data_blank_Chart.setOption(option);\n");
      out.write("  \t\t}\n");
      out.write("    </script>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
