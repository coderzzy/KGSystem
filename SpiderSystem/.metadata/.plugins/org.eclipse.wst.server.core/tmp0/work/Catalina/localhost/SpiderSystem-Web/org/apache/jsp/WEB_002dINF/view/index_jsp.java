/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M11
 * Generated at: 2018-05-07 05:09:40 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("\t<head lang=\"en\">\n");
      out.write("\t\t<meta charset=\"UTF-8\">\n");
      out.write("\t\t<title>Login Page | SpiderSystem</title>\n");
      out.write("\t\t<!-- 以下代码告诉IE浏览器，IE8/9及以后的版本都会以最高版本IE来渲染页面 -->\n");
      out.write("\t\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n");
      out.write("\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("\t\t<meta name=\"format-detection\" content=\"telephone=no\">\n");
      out.write("\t\t<meta name=\"renderer\" content=\"webkit\">\n");
      out.write("\t\t<!-- 以下代码取消第三方转码 -->\n");
      out.write("\t\t<meta name=\"Cache-Control\" content=\"no-siteapp\">\n");
      out.write("\n");
      out.write("\t\t<link rel=\"icon\" type=\"image/png\"\n");
      out.write("\t\t\thref=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/amazeui_assets/i/favicon.png\">\n");
      out.write("\t\t<link rel=\"stylesheet\"\n");
      out.write("\t\t\thref=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/amazeui_assets/css/amazeui.min.css\">\n");
      out.write("\n");
      out.write("\t\t<style>\n");
      out.write("\t\t\t.header {\n");
      out.write("\t\t\t\ttext-align: center;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t.header h1 {\n");
      out.write("\t\t\t\tfont-size: 200%;\n");
      out.write("\t\t\t\tcolor: #333;\n");
      out.write("\t\t\t\tmargin-top: 30px;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t.header p {\n");
      out.write("\t\t\t\tfont-size: 14px;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t</style>\n");
      out.write("\t</head>\n");
      out.write("<body>\n");
      out.write("<div class=\"header\">\n");
      out.write("\t<div class=\"am-g\">\n");
      out.write("\t\t<h1>SpiderSystem数据预处理系统</h1>\n");
      out.write("\t\t<p>\n");
      out.write("\t\t\tthe System of preDataProcess &amp; NewsTextSimilarity Algorithm based on Word-Frequency and Relation-Matrix\n");
      out.write("\t\t\t<br/>\n");
      out.write("\t\t\t基于词频统计和关系矩阵的新闻文本相似度算法——SpiderSystem数据预处理系统\n");
      out.write("\t\t</p>\n");
      out.write("\t</div>\n");
      out.write("\t<hr/>\n");
      out.write("</div>\n");
      out.write("<div class=\"am-g\">\n");
      out.write("  <div class=\"am-u-lg-6 am-u-md-8 am-u-sm-centered\">\n");
      out.write("    <h3>登  陆</h3>\n");
      out.write("    <hr>\n");
      out.write("    <div class=\"am-btn-group\">\n");
      out.write("      <a href=\"#\" class=\"am-btn am-btn-secondary am-btn-sm\">\n");
      out.write("        <i class=\"am-icon-github am-icon-sm\"></i>\n");
      out.write("        Github\n");
      out.write("      </a>\n");
      out.write("      <a href=\"#\" class=\"am-btn am-btn-success am-btn-sm\">\n");
      out.write("        <i class=\"am-icon-google-plus-square am-icon-sm\"></i>\n");
      out.write("        Google+\n");
      out.write("      </a>\n");
      out.write("      <a href=\"#\" class=\"am-btn am-btn-primary am-btn-sm\">\n");
      out.write("        <i class=\"am-icon-stack-overflow am-icon-sm\"></i>\n");
      out.write("        stackOverflow\n");
      out.write("      </a>\n");
      out.write("    </div>\n");
      out.write("    <br>\n");
      out.write("    <br>\n");
      out.write("\n");
      out.write("    <form class=\"am-form\" method=\"post\">\n");
      out.write("      <label for=\"email\">邮箱:</label>\n");
      out.write("      <input type=\"email\" name=\"\" id=\"email\" value=\"\">\n");
      out.write("      <br>\n");
      out.write("      <label for=\"password\">密码:</label>\n");
      out.write("      <input type=\"password\" name=\"\" id=\"password\" value=\"\">\n");
      out.write("      <br>\n");
      out.write("      <label for=\"remember-me\">\n");
      out.write("        <input type=\"checkbox\" id=\"remember-me\">\n");
      out.write("        记住密码\n");
      out.write("      </label>\n");
      out.write("      <br>\n");
      out.write("      <div class=\"am-cf\">\n");
      out.write("        <input type=\"button\" name=\"\" value=\"登 陆\"\n");
      out.write("          class=\"am-btn am-btn-primary am-btn-sm am-fl\"\n");
      out.write("          onclick=\"admin_index();\">\n");
      out.write("        <input type=\"submit\" name=\"\" value=\"忘记密码 ^_^? \"\n");
      out.write("          class=\"am-btn am-btn-default am-btn-sm am-fr\">\n");
      out.write("      </div>\n");
      out.write("    </form>\n");
      out.write("    <hr>\n");
      out.write("    <p>@ 2018 All Rights Reserved Zzy.</p>\n");
      out.write("\n");
      out.write("\n");
      out.write("  </div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("\t<!--[if (gte IE 9)|!(IE)]><!-->\n");
      out.write("  \t<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/js/jquery.min.js\"></script>\n");
      out.write("  \t<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/js/md5.js\"></script>\n");
      out.write("\t<script type=\"text/javascript\">\n");
      out.write("\t\tfunction admin_index(){\n");
      out.write("\t\t\t// var srt = \"zzy\";\n");
      out.write("\t\t\t// alert($.md5(srt));\n");
      out.write("\t\t\t// window.location.href = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/admin/index\";\n");
      out.write("\t\t\tvar email = $(\"#email\").val();\n");
      out.write("\t\t\tvar password = $(\"#password\").val();\n");
      out.write("\t\t\tif(email == \"\" || password == \"\"){\n");
      out.write("\t\t\t\talert(\"邮箱或者密码不可以为空!!!\");\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t             url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/admin/submit\",\n");
      out.write("\t             type: \"POST\",\n");
      out.write("\t             dataType: \"json\",\n");
      out.write("\t             data: {\n");
      out.write("\t               \"adminEmail\": email,\n");
      out.write("\t               \"adminPassword\": $.md5(password) \n");
      out.write("\t             },\n");
      out.write("\t             async: false,\n");
      out.write("\t             success: function(data) {\n");
      out.write("\t            \t if(data.result == \"success\"){\n");
      out.write("\t                \t // alert(\"操作成功\");\n");
      out.write("\t            \t\t window.location.href = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/admin/index\";\n");
      out.write("\t                 }else{\n");
      out.write("\t                \t alert(\"邮箱或密码输入错误...\");\n");
      out.write("\t                 }\n");
      out.write("\t             },\n");
      out.write("\t             error: function() {\n");
      out.write("\t               alert(\"登陆失败，...请检查网络连接，如确实怀疑服务器问题请联系Zzy\");\n");
      out.write("\t             }\n");
      out.write("\t           });\n");
      out.write("\t\t}\n");
      out.write("\t</script>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
