/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M11
 * Generated at: 2018-05-07 07:20:15 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class data_005fnews_005fprocess_005fwordSegment_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html class=\"no-js fixed-layout\">\n");
      out.write("<head>\n");
      out.write("  <meta charset=\"UTF-8\">\n");
      out.write("\t<title>Admin Index Page | SpiderSystem</title>\n");
      out.write("\t<!-- 以下代码告诉IE浏览器，IE8/9及以后的版本都会以最高版本IE来渲染页面 -->\n");
      out.write("\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n");
      out.write("\n");
      out.write("  <meta name=\"description\" content=\"the admin_index of SpiderSystem\">\n");
      out.write("  <meta name=\"keywords\" content=\"index SpiderSystem\">\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("\t<meta name=\"renderer\" content=\"webkit\">\n");
      out.write("\t<!-- 以下代码取消第三方转码 -->\n");
      out.write("\t<meta name=\"Cache-Control\" content=\"no-siteapp\">\n");
      out.write("\n");
      out.write("\t<link rel=\"icon\" type=\"image/png\"\n");
      out.write("\t\thref=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/amazeui_assets/i/favicon.png\">\n");
      out.write("  <link rel=\"apple-touch-icon-precomposed\"\n");
      out.write("    href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/amazeui_assets/i/app-icon72x72@2x.png\">\n");
      out.write("  <link rel=\"stylesheet\"\n");
      out.write("\t\thref=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/amazeui_assets/css/amazeui.min.css\">\n");
      out.write("  <link rel=\"stylesheet\"\n");
      out.write("  \thref=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/amazeui_assets/css/admin.css\">\n");
      out.write("  \t\n");
      out.write("  \t<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/js/echarts.js\"></script>\n");
      out.write("  <!--\n");
      out.write("  <script src='https://cdn.bootcss.com/echarts/3.7.2/echarts.simple.js'></script>\n");
      out.write("  -->\n");
      out.write("  <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/js/echarts-wordcloud.js\"></script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("  <!--[if lte IE 9]>\n");
      out.write("  <p class=\"browsehappy\">你正在使用<strong>过时</strong>的浏览器，Amaze UI 暂不支持。 请 <a href=\"http://browsehappy.com/\" target=\"_blank\">升级浏览器</a>\n");
      out.write("    以获得更好的体验！</p>\n");
      out.write("  <![endif]-->\n");
      out.write("\n");
      out.write("  ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "included_header.jsp", out, false);
      out.write("\n");
      out.write("\n");
      out.write("  <div class=\"am-cf admin-main\">\n");
      out.write("    <!-- sidebar start-->\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "included_sidebar.jsp", out, false);
      out.write("\n");
      out.write("    <!-- siderbar end -->\n");
      out.write("\n");
      out.write("    <!-- content start-->\n");
      out.write("    <div class=\"admin-content\">\n");
      out.write("    <div class=\"admin-content-body\">\n");
      out.write("      <div class=\"am-cf am-padding am-padding-bottom-0\">\n");
      out.write("        <div class=\"am-fl\"><strong class=\"am-text-primary am-text-lg\">分词与词频统计</strong> / <small>Word分词器  </small></div>\n");
      out.write("        <button type=\"button\" class=\"am-btn am-btn-primary\" onclick=\"start()\">开始</button>\n");
      out.write("        <button type=\"button\" class=\"am-btn am-btn-primary\" onclick=\"check()\">监测</button>\n");
      out.write("        <button type=\"button\" class=\"am-btn am-btn-primary\" onclick=\"show(1)\">展示_正向最大</button>\n");
      out.write("        <button type=\"button\" class=\"am-btn am-btn-primary\" onclick=\"show(2)\">展示_逆向最大</button>\n");
      out.write("        <button type=\"button\" class=\"am-btn am-btn-primary\" onclick=\"show(3)\">展示_正向最小</button>\n");
      out.write("        <button type=\"button\" class=\"am-btn am-btn-primary\" onclick=\"show(4)\">展示_逆向最小</button>\n");
      out.write("      </div>\n");
      out.write("\n");
      out.write("      <hr/>\n");
      out.write("      <div id=\"data_frequency1\" style=\"width:1000px; height: 400px;\"></div>\n");
      out.write("      <div id=\"data_frequency2\" style=\"width:800px; height: 600px;\"></div>\n");
      out.write("      <div id=\"data_frequency3\" style=\"width:800px; height: 600px;\"></div>\n");
      out.write("      <div id=\"data_frequency4\" style=\"width:1000px; height: 400px;\"></div>\n");
      out.write("\n");
      out.write("      \n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("      ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "included_footer.jsp", out, false);
      out.write("\n");
      out.write("    </div>\n");
      out.write("    <!-- content end-->\n");
      out.write("\n");
      out.write("\n");
      out.write("  </div>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("  <!--[if lt IE 9]>\n");
      out.write("  <script src=\"http://libs.baidu.com/jquery/1.11.1/jquery.min.js\"></script>\n");
      out.write("  <script src=\"http://cdn.staticfile.org/modernizr/2.8.3/modernizr.js\"></script>\n");
      out.write("  <script src=\"assets/js/amazeui.ie8polyfill.min.js\"></script>\n");
      out.write("  <![endif]-->\n");
      out.write("\n");
      out.write("  <!--[if (gte IE 9)|!(IE)]><!-->\n");
      out.write("  <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/js/jquery.min.js\"></script>\n");
      out.write("  <!--<![endif]-->\n");
      out.write("  <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/amazeui_assets/js/amazeui.min.js\"></script>\n");
      out.write("  <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/amazeui_assets/js/app.js\"></script>\n");
      out.write("  \n");
      out.write("  \n");
      out.write("  \n");
      out.write("  <script type=\"text/javascript\">\n");
      out.write("  \tfunction start(){\n");
      out.write("  \t\t$.ajax({\n");
      out.write("\t             url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/newsDataProcess/word_segment\",\n");
      out.write("\t             type: \"POST\",\n");
      out.write("\t             dataType: \"json\",\n");
      out.write("\t             /*\n");
      out.write("\t             data: {\n");
      out.write("\t               \"newsId\": newsId\n");
      out.write("\t             },\n");
      out.write("\t             */\n");
      out.write("\t             async: false,\n");
      out.write("\t             success: function(data) {\n");
      out.write("\t            \t if(data.result == \"success\"){\n");
      out.write("\t            \t\t alert(\"正在数据分词和统计词频...\");\n");
      out.write("\t                 }else{\n");
      out.write("\t                \t alert(\"数据读取失败\");\n");
      out.write("\t                 }\n");
      out.write("\t             },\n");
      out.write("\t             error: function() {\n");
      out.write("\t               alert(\"访问服务器失败，...请检查网络连接，如确实怀疑服务器问题请联系Zzy\");\n");
      out.write("\t             }\n");
      out.write("\t           });\n");
      out.write("  \t}\n");
      out.write("  \t\n");
      out.write("  \t\n");
      out.write("  \tfunction check(){\n");
      out.write("  \t\t$.ajax({\n");
      out.write("            url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/newsDataProcess/segmentProcess_check\",\n");
      out.write("            type: \"POST\",\n");
      out.write("            dataType: \"json\",\n");
      out.write("            async: false,\n");
      out.write("            success: function(data) {\n");
      out.write("           \t if(data.result == \"success\"){\n");
      out.write("               \t // alert(\"操作成功\");\n");
      out.write("               \t // alert(data.array[0]);\n");
      out.write("               \t \talert(\"恭喜,已完成\");   \t \n");
      out.write("                }else if(data.result == \"run\"){\n");
      out.write("               \t \talert(\"尚在进行中...\");\n");
      out.write("                }else{\n");
      out.write("                \talert(\"尚未开始运行...\")\n");
      out.write("                }\n");
      out.write("            },\n");
      out.write("            error: function() {\n");
      out.write("              alert(\"访问服务器失败，...请检查网络连接，如确实怀疑服务器问题请联系Zzy\");\n");
      out.write("            }\n");
      out.write("\t\t});\n");
      out.write("  \t}\n");
      out.write("  \t\n");
      out.write("  \t\n");
      out.write("  \tfunction show(index){\n");
      out.write("  \t\t$.ajax({\n");
      out.write("\t             url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/log/show_frequency\",\n");
      out.write("\t             type: \"POST\",\n");
      out.write("\t             dataType: \"json\",\n");
      out.write("\t             data:{\n");
      out.write("\t            \t \"index\":index\n");
      out.write("\t             },\n");
      out.write("\t             async: false,\n");
      out.write("\t             success: function(data) {\n");
      out.write("\t            \t if(data.result == \"success\"){\n");
      out.write("\t                \t alert(\"正在绘制图表,请稍等...\");\n");
      out.write("\t            \t\t var myChart = echarts.init(document.getElementById('data_frequency'+index));\n");
      out.write("\t            \t\t var mydata = [];\n");
      out.write("\t            \t\t \n");
      out.write("\t            \t\t for(var i=0;i<data.string.length;i++){\n");
      out.write("\t            \t\t\t mydata.push({\n");
      out.write("\t            \t\t\t\t name:data.string[i],\n");
      out.write("\t            \t\t\t\t value:data.integer[i]\n");
      out.write("\t            \t\t\t })\n");
      out.write("\t            \t\t }\n");
      out.write("\t            \t\t \n");
      out.write("\t            \t\t // console.log(mydata);\n");
      out.write("\t            \t\t /*\n");
      out.write("\t       \t            for (var key in keywords) {\n");
      out.write("\t       \t                mydata.push({\n");
      out.write("\t       \t                    name: key,\n");
      out.write("\t       \t                    value: Math.sqrt(keywords[key])\n");
      out.write("\t       \t                })\n");
      out.write("\t       \t            }*/\n");
      out.write("\t       \t         \t// var maskImage = new Image();\n");
      out.write("\t       \t            if (index == 1 || index == 3){\n");
      out.write("\t       \t            \t\n");
      out.write("\t\t        \t        option = {\n");
      out.write("\t\t        \t              title: {\n");
      out.write("\t\t        \t                  text: data.title,\n");
      out.write("\t\t        \t                  // link: 'http://www.google.com/trends/hottrends'\n");
      out.write("\t\t        \t              },\n");
      out.write("\t\t        \t              tooltip: {\n");
      out.write("\t\t        \t                  show: true\n");
      out.write("\t\t        \t              },\n");
      out.write("\t\t        \t              series: [{\n");
      out.write("\t\t        \t                  // name: 'wordCloud',\n");
      out.write("\t\t        \t                  type: 'wordCloud',\n");
      out.write("\t\t        \t                  size: ['80%', '80%'],\n");
      out.write("\t\t        \t                  textRotation : [0, 45, 90, -45],\n");
      out.write("\t\t        \t                  textPadding: 0,\n");
      out.write("\t\t        \t                  // sizeRange: [10, 80],  \n");
      out.write("\t             \t\t\t\t\t\t// rotationRange: [-90, 90],  \n");
      out.write("\t             \t\t\t\t\t\t// rotationStep: 45,  \n");
      out.write("\t             \t\t\t\t\t\t// gridSize: 2, \n");
      out.write("\t\t        \t                  shape: 'pentagon',\n");
      out.write("\t\t        \t                  // maskImage: maskImage,\n");
      out.write("\t\t        \t                  autoSize: {\n");
      out.write("\t\t        \t                      enable: true,\n");
      out.write("\t\t        \t                      minSize: 14\n");
      out.write("\t\t        \t                  },\n");
      out.write("\t\t        \t                  data:mydata\n");
      out.write("\t\t        \t              }]\n");
      out.write("\t\t        \t          };\n");
      out.write("\t       \t            }else if(index == 2){\n");
      out.write("\t       \t            \toption = {\n");
      out.write("\t       \t            \t\t\ttitle: {\n");
      out.write("\t\t\t        \t                  text: data.title,\n");
      out.write("\t\t\t        \t                  // link: 'http://www.google.com/trends/hottrends'\n");
      out.write("\t\t\t        \t              },\n");
      out.write("\t       \t            \t\t\ttooltip: {\n");
      out.write("\t       \t            \t\t        trigger: 'item',\n");
      out.write("\t       \t            \t\t        formatter: \"{a} <br/>{b}: {c} ({d}%)\"\n");
      out.write("\t       \t            \t\t    },\n");
      out.write("\t       \t            \t\t    \n");
      out.write("\t       \t            \t\t    series: [\n");
      out.write("\t       \t            \t\t        {\n");
      out.write("\t       \t            \t\t            name:'访问来源',\n");
      out.write("\t       \t            \t\t            type:'pie',\n");
      out.write("\t       \t            \t\t            radius: ['50%', '70%'],\n");
      out.write("\t       \t            \t\t            avoidLabelOverlap: false,\n");
      out.write("\t       \t            \t\t            label: {\n");
      out.write("\t       \t            \t\t                normal: {\n");
      out.write("\t       \t            \t\t                    show: false,\n");
      out.write("\t       \t            \t\t                    position: 'center'\n");
      out.write("\t       \t            \t\t                },\n");
      out.write("\t       \t            \t\t                emphasis: {\n");
      out.write("\t       \t            \t\t                    show: true,\n");
      out.write("\t       \t            \t\t                    textStyle: {\n");
      out.write("\t       \t            \t\t                        fontSize: '30',\n");
      out.write("\t       \t            \t\t                        fontWeight: 'bold'\n");
      out.write("\t       \t            \t\t                    }\n");
      out.write("\t       \t            \t\t                }\n");
      out.write("\t       \t            \t\t            },\n");
      out.write("\t       \t            \t\t            labelLine: {\n");
      out.write("\t       \t            \t\t                normal: {\n");
      out.write("\t       \t            \t\t                    show: false\n");
      out.write("\t       \t            \t\t                }\n");
      out.write("\t       \t            \t\t            },\n");
      out.write("\t       \t            \t\t            data:mydata\n");
      out.write("\t       \t            \t\t        }\n");
      out.write("\t       \t            \t\t    ]\n");
      out.write("\t       \t            \t\t};\n");
      out.write("\t       \t            }else if(index == 4){\n");
      out.write("\t       \t            \toption = {\n");
      out.write("\t       \t            \t\t\ttitle: {\n");
      out.write("\t\t\t        \t                  text: data.title,\n");
      out.write("\t\t\t        \t                  // link: 'http://www.google.com/trends/hottrends'\n");
      out.write("\t\t\t        \t              },\n");
      out.write("\t       \t            \t\t\tcolor: ['#3398DB'],\n");
      out.write("\t       \t            \t\t    tooltip : {\n");
      out.write("\t       \t            \t\t        trigger: 'axis',\n");
      out.write("\t       \t            \t\t        axisPointer : {            // 坐标轴指示器，坐标轴触发有效\n");
      out.write("\t       \t            \t\t            type : 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\n");
      out.write("\t       \t            \t\t        }\n");
      out.write("\t       \t            \t\t    },\n");
      out.write("\t       \t            \t\t    grid: {\n");
      out.write("\t       \t            \t\t        left: '3%',\n");
      out.write("\t       \t            \t\t        right: '4%',\n");
      out.write("\t       \t            \t\t        bottom: '3%',\n");
      out.write("\t       \t            \t\t        containLabel: true\n");
      out.write("\t       \t            \t\t    },\n");
      out.write("\t       \t            \t\t    xAxis : [\n");
      out.write("\t       \t            \t\t        {\n");
      out.write("\t       \t            \t\t            type : 'category',\n");
      out.write("\t       \t            \t\t            data : data.string,\n");
      out.write("\t       \t            \t\t            axisTick: {\n");
      out.write("\t       \t            \t\t                alignWithLabel: true\n");
      out.write("\t       \t            \t\t            }\n");
      out.write("\t       \t            \t\t        }\n");
      out.write("\t       \t            \t\t    ],\n");
      out.write("\t       \t            \t\t    yAxis : [\n");
      out.write("\t       \t            \t\t        {\n");
      out.write("\t       \t            \t\t            type : 'value'\n");
      out.write("\t       \t            \t\t        }\n");
      out.write("\t       \t            \t\t    ],\n");
      out.write("\t       \t            \t\t    series : [\n");
      out.write("\t       \t            \t\t        {\n");
      out.write("\t       \t            \t\t            name:'直接访问',\n");
      out.write("\t       \t            \t\t            type:'bar',\n");
      out.write("\t       \t            \t\t            barWidth: '60%',\n");
      out.write("\t       \t            \t\t            data:data.integer\n");
      out.write("\t       \t            \t\t        }\n");
      out.write("\t       \t            \t\t    ]\n");
      out.write("\t       \t            \t\t};\n");
      out.write("\t       \t            }\n");
      out.write("\t        \t          \n");
      out.write("\t        \t          \t// maskImage.onload = function () {\n");
      out.write("\t        \t                // option.series[0].maskImage\n");
      out.write("\t        \t                myChart.setOption(option);\n");
      out.write("\t        \t            // }\n");
      out.write("\n");
      out.write("\t        \t            // maskImage.src = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/images/logo.png';\n");
      out.write("\n");
      out.write("\t        \t          // 为echarts对象加载数据 \n");
      out.write("\t        \t          myChart.setOption(option); \n");
      out.write("\t                 }else{\n");
      out.write("\t                \t alert(\"词频数据读取失败\");\n");
      out.write("\t                 }\n");
      out.write("\t             },\n");
      out.write("\t             error: function() {\n");
      out.write("\t               alert(\"访问服务器失败，...请检查网络连接，如确实怀疑服务器问题请联系Zzy\");\n");
      out.write("\t             }\n");
      out.write("  \t\t});\n");
      out.write("  \t\t\n");
      out.write("  \t\tfunction createRandomItemStyle() {\n");
      out.write("  \t\t\treturn {\n");
      out.write("  \t                  normal: {\n");
      out.write("  \t                      color: 'rgb(' + [\n");
      out.write("  \t                          Math.round(Math.random() * 160),\n");
      out.write("  \t                          Math.round(Math.random() * 160),\n");
      out.write("  \t                          Math.round(Math.random() * 160)\n");
      out.write("  \t                      ].join(',') + ')'\n");
      out.write("  \t                  }\n");
      out.write("  \t              };\n");
      out.write("  \t   \t}\n");
      out.write("  \t}\n");
      out.write("  \t\n");
      out.write("    </script>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
