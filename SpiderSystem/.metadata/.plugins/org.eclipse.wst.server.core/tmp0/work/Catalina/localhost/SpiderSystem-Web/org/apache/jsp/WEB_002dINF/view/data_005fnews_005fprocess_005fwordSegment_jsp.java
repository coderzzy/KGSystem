/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M11
 * Generated at: 2018-05-06 01:17:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class data_005fnews_005fprocess_005fwordSegment_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html class=\"no-js fixed-layout\">\n");
      out.write("<head>\n");
      out.write("  <meta charset=\"UTF-8\">\n");
      out.write("\t<title>Admin Index Page | SpiderSystem</title>\n");
      out.write("\t<!-- 以下代码告诉IE浏览器，IE8/9及以后的版本都会以最高版本IE来渲染页面 -->\n");
      out.write("\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n");
      out.write("\n");
      out.write("  <meta name=\"description\" content=\"the admin_index of SpiderSystem\">\n");
      out.write("  <meta name=\"keywords\" content=\"index SpiderSystem\">\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("\t<meta name=\"renderer\" content=\"webkit\">\n");
      out.write("\t<!-- 以下代码取消第三方转码 -->\n");
      out.write("\t<meta name=\"Cache-Control\" content=\"no-siteapp\">\n");
      out.write("\n");
      out.write("\t<link rel=\"icon\" type=\"image/png\"\n");
      out.write("\t\thref=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/amazeui_assets/i/favicon.png\">\n");
      out.write("  <link rel=\"apple-touch-icon-precomposed\"\n");
      out.write("    href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/amazeui_assets/i/app-icon72x72@2x.png\">\n");
      out.write("  <link rel=\"stylesheet\"\n");
      out.write("\t\thref=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/amazeui_assets/css/amazeui.min.css\">\n");
      out.write("  <link rel=\"stylesheet\"\n");
      out.write("  \thref=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/amazeui_assets/css/admin.css\">\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("  <!--[if lte IE 9]>\n");
      out.write("  <p class=\"browsehappy\">你正在使用<strong>过时</strong>的浏览器，Amaze UI 暂不支持。 请 <a href=\"http://browsehappy.com/\" target=\"_blank\">升级浏览器</a>\n");
      out.write("    以获得更好的体验！</p>\n");
      out.write("  <![endif]-->\n");
      out.write("\n");
      out.write("  ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "included_header.jsp", out, false);
      out.write("\n");
      out.write("\n");
      out.write("  <div class=\"am-cf admin-main\">\n");
      out.write("    <!-- sidebar start-->\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "included_sidebar.jsp", out, false);
      out.write("\n");
      out.write("    <!-- siderbar end -->\n");
      out.write("\n");
      out.write("    <!-- content start-->\n");
      out.write("    <div class=\"admin-content\">\n");
      out.write("    <div class=\"admin-content-body\">\n");
      out.write("      <div class=\"am-cf am-padding am-padding-bottom-0\">\n");
      out.write("        <div class=\"am-fl\"><strong class=\"am-text-primary am-text-lg\">分词与词频统计</strong> / <small>Word分词器10种算法  </small></div>\n");
      out.write("        <button type=\"button\" class=\"am-btn am-btn-primary\" onclick=\"start()\">start</button>\n");
      out.write("        <button type=\"button\" class=\"am-btn am-btn-primary\" onclick=\"check()\">check</button>\n");
      out.write("        <button type=\"button\" class=\"am-btn am-btn-primary\" onclick=\"show()\">show</button>\n");
      out.write("      </div>\n");
      out.write("\n");
      out.write("      <hr/>\n");
      out.write("      <div id=\"data_frequency\" style=\"width:800px; height: 400px;\"></div>\n");
      out.write("\n");
      out.write("      \n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("      ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "included_footer.jsp", out, false);
      out.write("\n");
      out.write("    </div>\n");
      out.write("    <!-- content end-->\n");
      out.write("\n");
      out.write("\n");
      out.write("  </div>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("  <!--[if lt IE 9]>\n");
      out.write("  <script src=\"http://libs.baidu.com/jquery/1.11.1/jquery.min.js\"></script>\n");
      out.write("  <script src=\"http://cdn.staticfile.org/modernizr/2.8.3/modernizr.js\"></script>\n");
      out.write("  <script src=\"assets/js/amazeui.ie8polyfill.min.js\"></script>\n");
      out.write("  <![endif]-->\n");
      out.write("\n");
      out.write("  <!--[if (gte IE 9)|!(IE)]><!-->\n");
      out.write("  <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/js/jquery.min.js\"></script>\n");
      out.write("  <!--<![endif]-->\n");
      out.write("  <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/amazeui_assets/js/amazeui.min.js\"></script>\n");
      out.write("  <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/amazeui_assets/js/app.js\"></script>\n");
      out.write("  <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/js/echarts.js\"></script>\n");
      out.write("  <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/js/echarts-wordcloud.js\"></script>\n");
      out.write("  \n");
      out.write("  <script type=\"text/javascript\">\n");
      out.write("  \tfunction start(){\n");
      out.write("  \t\t$.ajax({\n");
      out.write("\t             url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/newsDataProcess/word_segment\",\n");
      out.write("\t             type: \"POST\",\n");
      out.write("\t             dataType: \"json\",\n");
      out.write("\t             /*\n");
      out.write("\t             data: {\n");
      out.write("\t               \"newsId\": newsId\n");
      out.write("\t             },\n");
      out.write("\t             */\n");
      out.write("\t             async: false,\n");
      out.write("\t             success: function(data) {\n");
      out.write("\t            \t if(data.result == \"success\"){\n");
      out.write("\t            \t\t alert(\"正在数据分词和统计词频...\");\n");
      out.write("\t                 }else{\n");
      out.write("\t                \t alert(\"数据读取失败\");\n");
      out.write("\t                 }\n");
      out.write("\t             },\n");
      out.write("\t             error: function() {\n");
      out.write("\t               alert(\"访问服务器失败，...请检查网络连接，如确实怀疑服务器问题请联系Zzy\");\n");
      out.write("\t             }\n");
      out.write("\t           });\n");
      out.write("  \t}\n");
      out.write("  \t\n");
      out.write("  \t\n");
      out.write("  \tfunction check(){\n");
      out.write("  \t\t$.ajax({\n");
      out.write("            url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/newsDataProcess/segmentProcess_check\",\n");
      out.write("            type: \"POST\",\n");
      out.write("            dataType: \"json\",\n");
      out.write("            async: false,\n");
      out.write("            success: function(data) {\n");
      out.write("           \t if(data.result == \"success\"){\n");
      out.write("               \t // alert(\"操作成功\");\n");
      out.write("               \t // alert(data.array[0]);\n");
      out.write("               \t \talert(\"恭喜,已完成\");   \t \n");
      out.write("                }else if(data.result == \"run\"){\n");
      out.write("               \t \talert(\"尚在进行中...\");\n");
      out.write("                }else{\n");
      out.write("                \talert(\"尚未开始运行...\")\n");
      out.write("                }\n");
      out.write("            },\n");
      out.write("            error: function() {\n");
      out.write("              alert(\"访问服务器失败，...请检查网络连接，如确实怀疑服务器问题请联系Zzy\");\n");
      out.write("            }\n");
      out.write("\t\t});\n");
      out.write("  \t}\n");
      out.write("  \t\n");
      out.write("  \t\n");
      out.write("  \tfunction show(){\n");
      out.write("  \t\t/*\n");
      out.write("  \t\t$.ajax({\n");
      out.write("\t             url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/log/show_xml\",\n");
      out.write("\t             type: \"POST\",\n");
      out.write("\t             dataType: \"json\",\n");
      out.write("\t             async: false,\n");
      out.write("\t             success: function(data) {\n");
      out.write("\t            \t if(data.result == \"success\"){\n");
      out.write("\t                \t // alert(\"操作成功\");\n");
      out.write("\t                \t // alert(data.array[0]);\n");
      out.write("\t                \t alert(\"根路径: \"+data.path);\n");
      out.write("\t                \t var str = \"\";\n");
      out.write("\t                \t for(var i=0;i<data.array.length;i++){\n");
      out.write("\t                \t\t str += \"<span><xmp>\"+data.array[i]+\"</xmp></span>\";\n");
      out.write("\t                \t }\n");
      out.write("\t                \t $(\"#log-content\").html(str);\n");
      out.write("\t                \t \n");
      out.write("\t                 }else{\n");
      out.write("\t                \t alert(\"xml文件读取失败\");\n");
      out.write("\t                 }\n");
      out.write("\t             },\n");
      out.write("\t             error: function() {\n");
      out.write("\t               alert(\"访问服务器失败，...请检查网络连接，如确实怀疑服务器问题请联系Zzy\");\n");
      out.write("\t             }\n");
      out.write("  \t\t});\n");
      out.write("  \t\t*/\n");
      out.write("  \t\t\n");
      out.write("  \t\tvar keywords = {\n");
      out.write("  \t            \"visualMap\": 22199,\n");
      out.write("  \t            \"continuous\": 10288,\n");
      out.write("  \t            \"contoller\": 620,\n");
      out.write("  \t            \"series\": 274470,\n");
      out.write("  \t            \"gauge\": 12311,\n");
      out.write("  \t            \"detail\": 1206,\n");
      out.write("  \t            \"piecewise\": 4885,\n");
      out.write("  \t            \"textStyle\": 32294,\n");
      out.write("  \t            \"markPoint\": 18574,\n");
      out.write("  \t            \"pie\": 38929,\n");
      out.write("  \t            \"roseType\": 969,\n");
      out.write("  \t            \"label\": 37517,\n");
      out.write("  \t            \"emphasis\": 12053,\n");
      out.write("  \t            \"yAxis\": 57299,\n");
      out.write("  \t            \"name\": 15418,\n");
      out.write("  \t            \"type\": 22905,\n");
      out.write("  \t            \"gridIndex\": 5146,\n");
      out.write("  \t            \"normal\": 49487,\n");
      out.write("  \t            \"itemStyle\": 33837,\n");
      out.write("  \t            \"min\": 4500,\n");
      out.write("  \t            \"silent\": 5744,\n");
      out.write("  \t            \"animation\": 4840,\n");
      out.write("  \t            \"offsetCenter\": 232,\n");
      out.write("  \t            \"inverse\": 3706,\n");
      out.write("  \t            \"borderColor\": 4812,\n");
      out.write("  \t            \"markLine\": 16578,\n");
      out.write("  \t            \"line\": 76970,\n");
      out.write("  \t            \"radiusAxis\": 6704,\n");
      out.write("  \t            \"radar\": 15964,\n");
      out.write("  \t            \"data\": 60679,\n");
      out.write("  \t            \"dataZoom\": 24347,\n");
      out.write("  \t            \"tooltip\": 43420,\n");
      out.write("  \t            \"toolbox\": 25222,\n");
      out.write("  \t            \"geo\": 16904,\n");
      out.write("  \t            \"parallelAxis\": 4029,\n");
      out.write("  \t            \"parallel\": 5319,\n");
      out.write("  \t            \"max\": 3393,\n");
      out.write("  \t            \"bar\": 43066,\n");
      out.write("  \t            \"heatmap\": 3110,\n");
      out.write("  \t            \"map\": 20285,\n");
      out.write("  \t            \"animationDuration\": 3425,\n");
      out.write("  \t            \"animationDelay\": 2431,\n");
      out.write("  \t            \"splitNumber\": 5175,\n");
      out.write("  \t            \"axisLine\": 12738,\n");
      out.write("  \t            \"lineStyle\": 19601,\n");
      out.write("  \t            \"splitLine\": 7133,\n");
      out.write("  \t            \"axisTick\": 8831,\n");
      out.write("  \t            \"axisLabel\": 17516,\n");
      out.write("  \t            \"pointer\": 590,\n");
      out.write("  \t            \"color\": 23426,\n");
      out.write("  \t            \"title\": 38497,\n");
      out.write("  \t            \"formatter\": 15214,\n");
      out.write("  \t            \"slider\": 7236,\n");
      out.write("  \t            \"legend\": 66514,\n");
      out.write("  \t            \"grid\": 28516,\n");
      out.write("  \t            \"smooth\": 1295,\n");
      out.write("  \t            \"smoothMonotone\": 696,\n");
      out.write("  \t            \"sampling\": 757,\n");
      out.write("  \t            \"feature\": 12815,\n");
      out.write("  \t            \"saveAsImage\": 2616,\n");
      out.write("  \t            \"polar\": 6279,\n");
      out.write("  \t            \"calculable\": 879,\n");
      out.write("  \t            \"backgroundColor\": 9419,\n");
      out.write("  \t            \"excludeComponents\": 130,\n");
      out.write("  \t            \"show\": 20620,\n");
      out.write("  \t            \"text\": 2592,\n");
      out.write("  \t            \"icon\": 2782,\n");
      out.write("  \t            \"dimension\": 478,\n");
      out.write("  \t            \"inRange\": 1060,\n");
      out.write("  \t            \"animationEasing\": 2983,\n");
      out.write("  \t            \"animationDurationUpdate\": 2259,\n");
      out.write("  \t            \"animationDelayUpdate\": 2236,\n");
      out.write("  \t            \"animationEasingUpdate\": 2213,\n");
      out.write("  \t            \"xAxis\": 89459,\n");
      out.write("  \t            \"angleAxis\": 5469,\n");
      out.write("  \t            \"showTitle\": 484,\n");
      out.write("  \t            \"dataView\": 2754,\n");
      out.write("  \t            \"restore\": 932,\n");
      out.write("  \t            \"timeline\": 10104,\n");
      out.write("  \t            \"range\": 477,\n");
      out.write("  \t            \"value\": 5732,\n");
      out.write("  \t            \"precision\": 878,\n");
      out.write("  \t            \"target\": 1433,\n");
      out.write("  \t            \"zlevel\": 5361,\n");
      out.write("  \t            \"symbol\": 8718,\n");
      out.write("  \t            \"interval\": 7964,\n");
      out.write("  \t            \"symbolSize\": 5300,\n");
      out.write("  \t            \"showSymbol\": 1247,\n");
      out.write("  \t            \"inside\": 8913,\n");
      out.write("  \t            \"xAxisIndex\": 3843,\n");
      out.write("  \t            \"orient\": 4205,\n");
      out.write("  \t            \"boundaryGap\": 5073,\n");
      out.write("  \t            \"nameGap\": 4896,\n");
      out.write("  \t            \"zoomLock\": 571,\n");
      out.write("  \t            \"hoverAnimation\": 2307,\n");
      out.write("  \t            \"legendHoverLink\": 3553,\n");
      out.write("  \t            \"stack\": 2907,\n");
      out.write("  \t            \"throttle\": 466,\n");
      out.write("  \t            \"connectNulls\": 897,\n");
      out.write("  \t            \"clipOverflow\": 826,\n");
      out.write("  \t            \"startValue\": 551,\n");
      out.write("  \t            \"minInterval\": 3292,\n");
      out.write("  \t            \"opacity\": 3097,\n");
      out.write("  \t            \"splitArea\": 4775,\n");
      out.write("  \t            \"filterMode\": 635,\n");
      out.write("  \t            \"end\": 409,\n");
      out.write("  \t            \"left\": 6475,\n");
      out.write("  \t            \"funnel\": 2238,\n");
      out.write("  \t            \"lines\": 6403,\n");
      out.write("  \t            \"baseline\": 431,\n");
      out.write("  \t            \"align\": 2608,\n");
      out.write("  \t            \"coord\": 897,\n");
      out.write("  \t            \"nameTextStyle\": 7477,\n");
      out.write("  \t            \"width\": 4338,\n");
      out.write("  \t            \"shadowBlur\": 4493,\n");
      out.write("  \t            \"effect\": 929,\n");
      out.write("  \t            \"period\": 225,\n");
      out.write("  \t            \"areaColor\": 631,\n");
      out.write("  \t            \"borderWidth\": 3654,\n");
      out.write("  \t            \"nameLocation\": 4418,\n");
      out.write("  \t            \"position\": 11723,\n");
      out.write("  \t            \"containLabel\": 1701,\n");
      out.write("  \t            \"scatter\": 10718,\n");
      out.write("  \t            \"areaStyle\": 5310,\n");
      out.write("  \t            \"scale\": 3859,\n");
      out.write("  \t            \"pieces\": 414,\n");
      out.write("  \t            \"categories\": 1000,\n");
      out.write("  \t            \"selectedMode\": 3825,\n");
      out.write("  \t            \"itemSymbol\": 273,\n");
      out.write("  \t            \"effectScatter\": 7147,\n");
      out.write("  \t            \"fontStyle\": 3376,\n");
      out.write("  \t            \"fontSize\": 3386,\n");
      out.write("  \t            \"margin\": 1034,\n");
      out.write("  \t            \"iconStyle\": 2257,\n");
      out.write("  \t            \"link\": 1366,\n");
      out.write("  \t            \"axisPointer\": 5245,\n");
      out.write("  \t            \"showDelay\": 896,\n");
      out.write("  \t            \"graph\": 22194,\n");
      out.write("  \t            \"subtext\": 1442,\n");
      out.write("  \t            \"selected\": 2881,\n");
      out.write("  \t            \"barCategoryGap\": 827,\n");
      out.write("  \t            \"barGap\": 1094,\n");
      out.write("  \t            \"barWidth\": 1521,\n");
      out.write("  \t            \"coordinateSystem\": 3622,\n");
      out.write("  \t            \"barBorderRadius\": 284,\n");
      out.write("  \t            \"z\": 4014,\n");
      out.write("  \t            \"polarIndex\": 1456,\n");
      out.write("  \t            \"shadowOffsetX\": 3046,\n");
      out.write("  \t            \"shadowColor\": 3771,\n");
      out.write("  \t            \"shadowOffsetY\": 2475,\n");
      out.write("  \t            \"height\": 1988,\n");
      out.write("  \t            \"barMinHeight\": 575,\n");
      out.write("  \t            \"lang\": 131,\n");
      out.write("  \t            \"symbolRotate\": 2752,\n");
      out.write("  \t            \"symbolOffset\": 2549,\n");
      out.write("  \t            \"showAllSymbol\": 942,\n");
      out.write("  \t            \"transitionDuration\": 993,\n");
      out.write("  \t            \"bottom\": 3724,\n");
      out.write("  \t            \"fillerColor\": 229,\n");
      out.write("  \t            \"nameMap\": 1249,\n");
      out.write("  \t            \"barMaxWidth\": 747,\n");
      out.write("  \t            \"radius\": 2103,\n");
      out.write("  \t            \"center\": 2425,\n");
      out.write("  \t            \"magicType\": 3276,\n");
      out.write("  \t            \"labelPrecision\": 248,\n");
      out.write("  \t            \"option\": 654,\n");
      out.write("  \t            \"seriesIndex\": 935,\n");
      out.write("  \t            \"controlPosition\": 121,\n");
      out.write("  \t            \"itemGap\": 3188,\n");
      out.write("  \t            \"padding\": 3481,\n");
      out.write("  \t            \"shadowStyle\": 347,\n");
      out.write("  \t            \"boxplot\": 1394,\n");
      out.write("  \t            \"labelFormatter\": 264,\n");
      out.write("  \t            \"realtime\": 631,\n");
      out.write("  \t            \"dataBackgroundColor\": 239,\n");
      out.write("  \t            \"showDetail\": 247,\n");
      out.write("  \t            \"showDataShadow\": 217,\n");
      out.write("  \t            \"x\": 684,\n");
      out.write("  \t            \"valueDim\": 499,\n");
      out.write("  \t            \"onZero\": 931,\n");
      out.write("  \t            \"right\": 3255,\n");
      out.write("  \t            \"clockwise\": 1035,\n");
      out.write("  \t            \"itemWidth\": 1732,\n");
      out.write("  \t            \"trigger\": 3840,\n");
      out.write("  \t            \"axis\": 379,\n");
      out.write("  \t            \"selectedOffset\": 670,\n");
      out.write("  \t            \"startAngle\": 1293,\n");
      out.write("  \t            \"minAngle\": 590,\n");
      out.write("  \t            \"top\": 4637,\n");
      out.write("  \t            \"avoidLabelOverlap\": 870,\n");
      out.write("  \t            \"labelLine\": 3785,\n");
      out.write("  \t            \"sankey\": 2933,\n");
      out.write("  \t            \"endAngle\": 213,\n");
      out.write("  \t            \"start\": 779,\n");
      out.write("  \t            \"roam\": 1738,\n");
      out.write("  \t            \"fontWeight\": 2828,\n");
      out.write("  \t            \"fontFamily\": 2490,\n");
      out.write("  \t            \"subtextStyle\": 2066,\n");
      out.write("  \t            \"indicator\": 853,\n");
      out.write("  \t            \"sublink\": 708,\n");
      out.write("  \t            \"zoom\": 1038,\n");
      out.write("  \t            \"subtarget\": 659,\n");
      out.write("  \t            \"length\": 1060,\n");
      out.write("  \t            \"itemSize\": 505,\n");
      out.write("  \t            \"controlStyle\": 452,\n");
      out.write("  \t            \"yAxisIndex\": 2529,\n");
      out.write("  \t            \"edgeLabel\": 1188,\n");
      out.write("  \t            \"radiusAxisIndex\": 354,\n");
      out.write("  \t            \"scaleLimit\": 1313,\n");
      out.write("  \t            \"geoIndex\": 535,\n");
      out.write("  \t            \"regions\": 1892,\n");
      out.write("  \t            \"itemHeight\": 1290,\n");
      out.write("  \t            \"nodes\": 644,\n");
      out.write("  \t            \"candlestick\": 3166,\n");
      out.write("  \t            \"crossStyle\": 466,\n");
      out.write("  \t            \"edges\": 369,\n");
      out.write("  \t            \"links\": 3277,\n");
      out.write("  \t            \"layout\": 846,\n");
      out.write("  \t            \"barBorderColor\": 721,\n");
      out.write("  \t            \"barBorderWidth\": 498,\n");
      out.write("  \t            \"treemap\": 3865,\n");
      out.write("  \t            \"y\": 367,\n");
      out.write("  \t            \"valueIndex\": 704,\n");
      out.write("  \t            \"showLegendSymbol\": 482,\n");
      out.write("  \t            \"mapValueCalculation\": 492,\n");
      out.write("  \t            \"optionToContent\": 264,\n");
      out.write("  \t            \"handleColor\": 187,\n");
      out.write("  \t            \"handleSize\": 271,\n");
      out.write("  \t            \"showContent\": 1853,\n");
      out.write("  \t            \"angleAxisIndex\": 406,\n");
      out.write("  \t            \"endValue\": 327,\n");
      out.write("  \t            \"triggerOn\": 1720,\n");
      out.write("  \t            \"contentToOption\": 169,\n");
      out.write("  \t            \"buttonColor\": 71,\n");
      out.write("  \t            \"rotate\": 1144,\n");
      out.write("  \t            \"hoverLink\": 335,\n");
      out.write("  \t            \"outOfRange\": 491,\n");
      out.write("  \t            \"textareaColor\": 58,\n");
      out.write("  \t            \"textareaBorderColor\": 58,\n");
      out.write("  \t            \"textColor\": 60,\n");
      out.write("  \t            \"buttonTextColor\": 66,\n");
      out.write("  \t            \"category\": 336,\n");
      out.write("  \t            \"hideDelay\": 786,\n");
      out.write("  \t            \"alwaysShowContent\": 1267,\n");
      out.write("  \t            \"extraCssText\": 901,\n");
      out.write("  \t            \"effectType\": 277,\n");
      out.write("  \t            \"force\": 1820,\n");
      out.write("  \t            \"rippleEffect\": 723,\n");
      out.write("  \t            \"edgeSymbolSize\": 329,\n");
      out.write("  \t            \"showEffectOn\": 271,\n");
      out.write("  \t            \"gravity\": 199,\n");
      out.write("  \t            \"edgeLength\": 193,\n");
      out.write("  \t            \"layoutAnimation\": 152,\n");
      out.write("  \t            \"length2\": 169,\n");
      out.write("  \t            \"enterable\": 957,\n");
      out.write("  \t            \"dim\": 83,\n");
      out.write("  \t            \"readOnly\": 143,\n");
      out.write("  \t            \"levels\": 444,\n");
      out.write("  \t            \"textGap\": 256,\n");
      out.write("  \t            \"pixelRatio\": 84,\n");
      out.write("  \t            \"nodeScaleRatio\": 232,\n");
      out.write("  \t            \"draggable\": 249,\n");
      out.write("  \t            \"brushType\": 158,\n");
      out.write("  \t            \"radarIndex\": 152,\n");
      out.write("  \t            \"large\": 182,\n");
      out.write("  \t            \"edgeSymbol\": 675,\n");
      out.write("  \t            \"largeThreshold\": 132,\n");
      out.write("  \t            \"leafDepth\": 73,\n");
      out.write("  \t            \"childrenVisibleMin\": 73,\n");
      out.write("  \t            \"minSize\": 35,\n");
      out.write("  \t            \"maxSize\": 35,\n");
      out.write("  \t            \"sort\": 90,\n");
      out.write("  \t            \"funnelAlign\": 61,\n");
      out.write("  \t            \"source\": 336,\n");
      out.write("  \t            \"nodeClick\": 200,\n");
      out.write("  \t            \"curveness\": 350,\n");
      out.write("  \t            \"areaSelectStyle\": 104,\n");
      out.write("  \t            \"parallelIndex\": 52,\n");
      out.write("  \t            \"initLayout\": 359,\n");
      out.write("  \t            \"trailLength\": 116,\n");
      out.write("  \t            \"boxWidth\": 20,\n");
      out.write("  \t            \"back\": 53,\n");
      out.write("  \t            \"rewind\": 110,\n");
      out.write("  \t            \"zoomToNodeRatio\": 80,\n");
      out.write("  \t            \"squareRatio\": 60,\n");
      out.write("  \t            \"parallelAxisDefault\": 358,\n");
      out.write("  \t            \"checkpointStyle\": 440,\n");
      out.write("  \t            \"nodeWidth\": 49,\n");
      out.write("  \t            \"color0\": 62,\n");
      out.write("  \t            \"layoutIterations\": 56,\n");
      out.write("  \t            \"nodeGap\": 54,\n");
      out.write("  \t            \"color(Array\": 76,\n");
      out.write("  \t            \"<string>)\": 76,\n");
      out.write("  \t            \"repulsion\": 276,\n");
      out.write("  \t            \"tiled\": 105,\n");
      out.write("  \t            \"currentIndex\": 145,\n");
      out.write("  \t            \"axisType\": 227,\n");
      out.write("  \t            \"loop\": 97,\n");
      out.write("  \t            \"playInterval\": 112,\n");
      out.write("  \t            \"borderColor0\": 23,\n");
      out.write("  \t            \"gap\": 43,\n");
      out.write("  \t            \"autoPlay\": 123,\n");
      out.write("  \t            \"showPlayBtn\": 25,\n");
      out.write("  \t            \"breadcrumb\": 119,\n");
      out.write("  \t            \"colorMappingBy\": 85,\n");
      out.write("  \t            \"id\": 18,\n");
      out.write("  \t            \"blurSize\": 85,\n");
      out.write("  \t            \"minOpacity\": 50,\n");
      out.write("  \t            \"maxOpacity\": 54,\n");
      out.write("  \t            \"prevIcon\": 12,\n");
      out.write("  \t            \"children\": 21,\n");
      out.write("  \t            \"shape\": 98,\n");
      out.write("  \t            \"nextIcon\": 12,\n");
      out.write("  \t            \"showNextBtn\": 17,\n");
      out.write("  \t            \"stopIcon\": 21,\n");
      out.write("  \t            \"visibleMin\": 83,\n");
      out.write("  \t            \"visualDimension\": 97,\n");
      out.write("  \t            \"colorSaturation\": 56,\n");
      out.write("  \t            \"colorAlpha\": 66,\n");
      out.write("  \t            \"emptyItemWidth\": 10,\n");
      out.write("  \t            \"inactiveOpacity\": 4,\n");
      out.write("  \t            \"activeOpacity\": 4,\n");
      out.write("  \t            \"showPrevBtn\": 19,\n");
      out.write("  \t            \"playIcon\": 26,\n");
      out.write("  \t            \"ellipsis\": 19,\n");
      out.write("  \t            \"gapWidth\": 19,\n");
      out.write("  \t            \"borderColorSaturation\": 10,\n");
      out.write("  \t            \"handleIcon\": 2,\n");
      out.write("  \t            \"handleStyle\": 6,\n");
      out.write("  \t            \"borderType\": 1,\n");
      out.write("  \t            \"constantSpeed\": 1,\n");
      out.write("  \t            \"polyline\": 2,\n");
      out.write("  \t            \"blendMode\": 1,\n");
      out.write("  \t            \"dataBackground\": 1,\n");
      out.write("  \t            \"textAlign\": 1,\n");
      out.write("  \t            \"textBaseline\": 1,\n");
      out.write("  \t            \"brush\": 3\n");
      out.write("  \t        };          \n");
      out.write("  \t            var mydata = [];\n");
      out.write("  \t            for (var key in keywords) {\n");
      out.write("  \t                mydata.push({\n");
      out.write("  \t                    name: key,\n");
      out.write("  \t                    value: Math.sqrt(keywords[key])\n");
      out.write("  \t                })\n");
      out.write("  \t            }\n");
      out.write("  \t            // console.log(data);\n");
      out.write("  \t       // 基于准备好的dom，初始化echarts图表\n");
      out.write("  \t          var myChart = echarts.init(document.getElementById('data_frequency')); \n");
      out.write("\n");
      out.write("  \t          function createRandomItemStyle() {\n");
      out.write("  \t              return {\n");
      out.write("  \t                  normal: {\n");
      out.write("  \t                      color: 'rgb(' + [\n");
      out.write("  \t                          Math.round(Math.random() * 160),\n");
      out.write("  \t                          Math.round(Math.random() * 160),\n");
      out.write("  \t                          Math.round(Math.random() * 160)\n");
      out.write("  \t                      ].join(',') + ')'\n");
      out.write("  \t                  }\n");
      out.write("  \t              };\n");
      out.write("  \t          }\n");
      out.write("  \t          \n");
      out.write("  \t        // var maskImage = new Image();  \n");
      out.write("            // maskImage.src = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/images/logo.png\"; \n");
      out.write("\n");
      out.write("  \t          option = {\n");
      out.write("  \t              title: {\n");
      out.write("  \t                  text: 'Google Trends',\n");
      out.write("  \t                  // link: 'http://www.google.com/trends/hottrends'\n");
      out.write("  \t              },\n");
      out.write("  \t              tooltip: {\n");
      out.write("  \t                  show: true\n");
      out.write("  \t              },\n");
      out.write("  \t              series: [{\n");
      out.write("  \t                  name: 'Google Trends',\n");
      out.write("  \t                  type: 'wordCloud',\n");
      out.write("  \t                  size: ['80%', '80%'],\n");
      out.write("  \t                  textRotation : [0, 45, 90, -45],\n");
      out.write("  \t                  textPadding: 0,\n");
      out.write("  \t                  shape: 'pentagon',\n");
      out.write("  \t                  // maskImage: maskImage,\n");
      out.write("  \t                  autoSize: {\n");
      out.write("  \t                      enable: true,\n");
      out.write("  \t                      minSize: 14\n");
      out.write("  \t                  },\n");
      out.write("  \t                  data:mydata\n");
      out.write("  \t              }]\n");
      out.write("  \t          };\n");
      out.write("\n");
      out.write("  \t          // 为echarts对象加载数据 \n");
      out.write("  \t          myChart.setOption(option); \n");
      out.write("  \t}\n");
      out.write("  \t\n");
      out.write("    </script>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
